{"version":3,"file":"vue.js","sources":["../src/compiler/generate.js","../src/compiler/parser.js","../src/compiler/index.js","../src/utils.js","../src/observe/array.js","../src/observe/dep.js","../src/observe/index.js","../src/state.js","../src/observe/scheduler.js","../src/observe/watcher.js","../src/vdom/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/init.js","../src/render.js","../src/global-api/index.js","../src/index.js"],"sourcesContent":["const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // {{   xxx  }}\n\nfunction genProps(attrs) {\n    // {key:value,key:value,}\n    let str = '';\n    for (let i = 0; i < attrs.length; i++) {\n        let attr = attrs[i];\n        if (attr.name === 'style') { // {name:id,value:'app'}\n            let styles = {}\n            attr.value.replace(/([^;:]+):([^;:]+)/g, function () {\n                styles[arguments[1]] = arguments[2];\n            })\n            attr.value = styles\n        }\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\n    }\n    return `{${str.slice(0, -1)}}`\n}\n\nfunction gen(el) {\n    if (el.type == 1) {\n        return generate(el); // 如果是元素就递归的生成\n    } else {\n        let text = el.text; // {{}}\n        if (!defaultTagRE.test(text)) return `_v('${text}')`; // 说明就是普通文本\n\n        // 说明有表达式 我需要 做一个表达式和普通值的拼接 ['aaaa',_s(name),'bbb'].join('+)\n        // _v('aaaa'+_s(name) + 'bbb')\n        let lastIndex = defaultTagRE.lastIndex = 0;\n        let tokens = []; // <div> aaa{{bbb}} aaa </div>\n        let match;\n\n        // ，每次匹配的时候 lastIndex 会自动向后移动\n        while (match = defaultTagRE.exec(text)) { // 如果正则 + g 配合exec 就会有一个问题 lastIndex的问题\n            let index = match.index;\n            if (index > lastIndex) {\n                tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n            }\n            tokens.push(`_s(${match[1].trim()})`);\n            lastIndex = index + match[0].length;\n        }\n        if (lastIndex < text.length) {\n            tokens.push(JSON.stringify(text.slice(lastIndex)));\n        }\n        return `_v(${tokens.join('+')})`; // webpack 源码 css-loader  图片处理\n    }\n}\n\nfunction genChildren(el) {\n    let children = el.children;\n    if (children) {\n        return children.map(item => gen(item)).join(',')\n    }\n    return false;\n}\n\n// _c(div,{},c1,c2,c3,c4)\nexport function generate(ast) {\n    let children = genChildren(ast)\n    let code = `_c('${ast.tag}',${\n        ast.attrs.length ? genProps(ast.attrs) : 'undefined'\n    }${\n        children ? `,${children}` : ''\n    })`\n    return code;\n}\n","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // 匹配标签名的  aa-xxx\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; //  aa:aa-xxx\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); //  此正则可以匹配到标签名 匹配到结果的第一个(索引第一个) [1]\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>  [1]\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\n\n// [1]属性的key   [3] || [4] ||[5] 属性的值  a=1  a='1'  a=\"\"\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的  />    >\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // {{   xxx  }}\n\n// vue3的编译原理比vue2里好很多，没有这么多正则了\n\nexport function parserHTML(html) {\n    // 可以不停的截取模板，直到把模板全部解析完毕\n    let stack = [];\n    let root = null;\n\n    // 我要构建父子关系\n    function createASTElement(tag, attrs, parent = null) {\n        return {\n            tag,\n            type: 1, // 元素\n            children: [],\n            parent,\n            attrs\n        }\n    }\n\n    function start(tag, attrs) { // [div,p]\n        // 遇到开始标签 就取栈中的最后一个作为父节点\n        let parent = stack[stack.length - 1];\n        let element = createASTElement(tag, attrs, parent);\n        if (root == null) { // 说明当前节点就是根节点\n            root = element\n        }\n        if (parent) {\n            element.parent = parent; // 跟新p的parent属性 指向parent\n            parent.children.push(element);\n        }\n        stack.push(element)\n    }\n\n    function end(tagName) {\n        let endTag = stack.pop();\n        if (endTag.tag != tagName) {\n            console.log('标签出错')\n        }\n    }\n\n    function text(chars) {\n        let parent = stack[stack.length - 1];\n        chars = chars.replace(/\\s/g, \"\");\n        if (chars) {\n            parent.children.push({\n                type: 2,\n                text: chars\n            })\n        }\n    }\n\n    function advance(len) {\n        html = html.substring(len);\n    }\n\n    function parseStartTag() {\n        const start = html.match(startTagOpen);  // 4.30 继续\n        if (start) {\n            const match = {\n                tagName: start[1],\n                attrs: []\n            }\n            advance(start[0].length);\n            let end;\n            let attr;\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) { // 1要有属性 2，不能为开始的结束标签 <div>\n                match.attrs.push({name: attr[1], value: attr[3] || attr[4] || attr[5]});\n                advance(attr[0].length);\n            } // <div id=\"app\" a=1 b=2 >\n            if (end) {\n                advance(end[0].length);\n            }\n            return match;\n        }\n        return false;\n    }\n\n    while (html) {\n        // 解析标签和文本\n        let index = html.indexOf('<');\n        if (index == 0) {\n            // 解析开始标签 并且把属性也解析出来  </div>\n            const startTagMatch = parseStartTag()\n            if (startTagMatch) { // 开始标签\n                start(startTagMatch.tagName, startTagMatch.attrs);\n                continue;\n            }\n            let endTagMatch;\n            if (endTagMatch = html.match(endTag)) { // 结束标签\n                end(endTagMatch[1]);\n                advance(endTagMatch[0].length);\n                continue;\n            }\n        }\n        // 文本\n        if (index > 0) { // 文本\n            let chars = html.substring(0, index) //<div></div>\n            text(chars);\n            advance(chars.length)\n        }\n    }\n\n    return root;\n\n}\n\n\n//  <div id=\"app\">hello wolrd <span>hello</span></div> */}\n","import {generate} from \"./generate\";\nimport {parserHTML} from \"./parser\";\n\n\nexport function compileToFunction(template) {\n\n    // 1.将模板变成ast语法树\n    let ast = parserHTML(template);\n\n    // 代码优化 标记静态节点\n\n    // 2.代码生成\n    let code = generate(ast);  // 模板引擎的实现原理 都是 new Function + with  ejs jade handlerbar...\n    let render = new Function(`with(this){return ${code}}`);\n\n    return render;\n    // 1.编译原理\n    // 2.响应式原理 依赖收集\n    // 3.组件化开发 （贯穿了vue的流程）\n    // 4.diff算法\n}\n\n","export function isFunction(val) {\n    return typeof val === \"function\";\n}\n\nexport function isObject(val) {\n    return typeof val === \"object\" && val !== null;\n}\n\nlet callbacks = [];\nlet waiting = false;\n\nfunction flushCallbacks() {\n    callbacks.forEach(fn => fn()); // 按照顺序清空nextTick\n    callbacks = [];\n    waiting = false;\n}\n\nexport function nextTick(fn) { // vue3里面的nextTick就是promise，vue2里面做了一些兼容性处理\n    callbacks.push(fn);\n    if (!waiting) {\n        return Promise.resolve().then(flushCallbacks);\n        waiting = true;\n    }\n}\n\nexport let isArray = Array.isArray;\n\nlet strats = {}; // 存放所有策略\n\nlet lifeCycle = [\n    'beforeCreate',\n    'created',\n    'beforeMount',\n    'mounted',\n    'beforeUpdate',\n    'updated',\n    'beforeDestroy',\n    'destroyed',\n]\nlifeCycle.forEach(hook => {\n    strats[hook] = function (parentVal, childVal) {\n        if (childVal) {\n            if (parentVal) { // 父子都有值，用父和子拼接在一起，父有值就一定是数组\n                return parentVal.concat(childVal);\n            } else { // 儿子有值，父亲没有值\n                if (isArray(childVal)) {\n                    return childVal;\n                }\n                return [childVal]; // 如果没有值，就会变成数组\n            }\n        } else {\n            return parentVal;\n        }\n    }\n});\n\nexport function mergeOptions(parentVal, childVal) {\n    const options = {};\n\n    for (let key in parentVal) {\n        mergeFiled(key);\n    }\n    for (let key in childVal) {\n        if (!parentVal.hasOwnProperty(key)) {\n            mergeFiled(key);\n        }\n    }\n\n    function mergeFiled(key) {\n        // 设计模式 策略模式\n        let strat = strats[key];\n        if (strat) {\n            options[key] = strat(parentVal[key], childVal[key]);\n        } else {\n            options[key] = childVal[key] || parentVal[key];\n        }\n    }\n\n    return options;\n}\n","let oldArrayPrototype = Array.prototype; // 获取数组的老的原型方法\n\nexport let arrayMethods = Object.create(oldArrayPrototype); // 让arrayMethod通过__proto__能获取到数组的方法\n// arrayMethods.__proto__ == oldArrayPrototype\n// arrayMethods.push = function\n\nlet methods = [\n  // 只有这7个方法，可以导致数组发生变化\n  \"push\",\n  \"pop\",\n  \"shift\",\n  \"unshift\",\n  \"reserve\",\n  \"sort\",\n  \"splice\",\n];\n\nmethods.forEach((method) => {\n  arrayMethods[method] = function (...args) {\n    // 数组新增的属性，要看一下是不是对象，如果是对象，继续进行劫持\n\n    // 需要调用数组元素逻辑\n    oldArrayPrototype[method].call(this, ...args);\n\n    // todo... 可以添加自己逻辑 函数劫持 切片\n    let inserted = null;\n    let ob = this.__ob__;\n    switch (method) {\n      case \"splice\": // 修改 删除 添加\n        inserted = args.slice(2); // splice方法从第三个参数起，是增添的新数据\n        break;\n      case \"push\":\n      case \"unshift\":\n        inserted = args; // 调用push和unshift传递的参数就是新增的逻辑\n        break;\n    }\n    // inserted[] 遍历数组，看一下它是否需要进行劫持\n    if (inserted) {\n      ob.observeArray(inserted);\n    }\n    ob.dep.notify(); // 触发页面更新流程\n  };\n});\n\n// 属性的查找，是先找自己身上的，找不到去原型上查找\n// arrayMethods.push();\n// arrayMethods.concat();\n","let id = 0;\n\nclass Dep {\n    constructor(props) { // 要把watcher放到dep中\n        this.subs = [];\n        this.id = id++;\n    }\n\n    depend() {\n        // 要给watcher也加一个标识，防止重复\n        // this.subs.push(Dep.target); // 让dep记住这个watcher，watcher还要记住dep，相互的关系\n\n        Dep.target.addDep(this); // 在watcher中在调用dep的addSub方法\n    }\n\n    addSub(watcher) {\n        this.subs.push(watcher); // 让dep记住watcher\n    }\n\n    notify() {\n        this.subs.forEach(watcher => watcher.update());\n    }\n}\n\nDep.target = null; // 这里我用了一个全局的变量 window.target 静态属性\nexport default Dep;\n","import {isArray, isObject} from \"../utils\";\nimport {arrayMethods} from \"./array\";\nimport Dep from \"./dep\";\n\n// 1.每个对象都有一个__proto__属性，它指向所属类的原型 fn.__ptoto__ = Function.prototype\n// 2.每个原型上都有一个constructor属性，指向函数本身 Function.prototype.constructor = Function\n\nclass Observer {\n    constructor(value) {\n        // 不让 __ob__ 被遍历到\n        // value.__ob__ = this; // 我给对象和数组添加一个自定义属性\n\n        // 如果给一个对象增添一个不存在的属性，我希望也能更新视图 {}.dep => watcher\n        this.dep = new Dep(); // 给对象和数组都增加dep属性 {} []\n\n        Object.defineProperty(value, \"__ob__\", {\n            value: this,\n            enumerable: false, // 表示这个属性不能被列举出来，不能被循环到\n        });\n\n        if (isArray(value)) {\n            // 更改数组原型方法，如果是数组，我就改写数组的原型链\n            value.__proto__ = arrayMethods; // 重写数组的方法\n            this.observeArray(value);\n\n            // 数组如何依赖收集，而且数组更新的时候，如何触发更新？ [].push pop...\n        } else {\n            this.walk(value); // 核心就是循环对象\n        }\n    }\n\n    observeArray(data) {\n        // 递归遍历数组，对数组内部的对象再次重写 [[]] [{}]\n        data.forEach((item) => {\n            // vm.arr[0].a = 100;\n            // vm.arr[0] = 100;\n            // 数组里面如果是引用类型那么是响应式的\n            observe(item);\n        });\n    }\n\n    walk(data) {\n        Object.keys(data).forEach((key) => {\n            // 要使用defineProperty重新定义\n            defineReactive(data, key, data[key]);\n        });\n    }\n}\n\n// vue2应用了defineProperty需要一加载的时候，就进行递归操作，所以耗性能，如果层次过深也会浪费性能\n// 1. 性能优化原则：\n// 1）不要把所有的数据都放在data中，因为所有的数据都会增加get和set\n// 2）不要写数据的时候层次过深，尽量扁平化数据\n// 3）不要频繁获取数据\n// 4) 如果数据不需要响应式，可以使用 Object.freeze 冻结属性\n\nfunction dependArray(value) { // 让数组里的引用类型都收集依赖\n    for (let i = 0; i < value.length; i++) {\n        let current = value[i];\n        current.__ob__ && current.__ob__.dep.depend();\n        if (isArray(current)) {\n            dependArray(current);\n        }\n    }\n}\n\nfunction defineReactive(obj, key, value) {\n    let childOb = observe(value); // 递归进行观测数据，不管有多少层，都进行defineProperty\n    // childOb 如果有值，那么就是数组或者对象\n\n    // 数组的dep\n    let dep = new Dep(); // 每个属性都增加了一个dep\n\n    // vue2慢的原因，主要在这个方法中\n    Object.defineProperty(obj, key, {\n        get() { //后续会有很多逻辑\n            if (Dep.target) { // watcher\n                dep.depend();\n\n                if (childOb) { // 取属性的时候，会对对应的值（对象本身和数组）进行依赖收集\n                    childOb.dep.depend(); // 让数组和对象也记住当前的watcher\n                    if (isArray(value)) {\n                        // 可能是数组套数组\n                        dependArray(value);\n                    }\n                }\n            }\n\n            return value; // 闭包 此value会向上层的value进行查找\n        },\n        // 一个属性可能对应多个watcher，数组也有更新\n        set(newValue) { // 如果设置的是一个对象那么会再次进行劫持\n            if (newValue === value) return;\n            observe(newValue);\n            value = newValue;\n            dep.notify(); // 拿到当前的dep里面的watcher依次执行\n        },\n    });\n}\n\nexport function observe(value) {\n    // 1. 如果value不是对象，那么就不用观测了，说明写的有问题\n    if (!isObject(value)) {\n        return;\n    }\n\n    if (value.__ob__) {\n        return; // 一个对象不需要重新被观测\n    }\n    // 需要对对象进行观测（最外层必须是一个{} 不能是数组）\n\n    // 如果一个数据已经被观测过了，就不要再进行观测了，用类来实现，我观测过就增加一个标识，说明被观测过了，再观测的时候，可以先检测是否观测过，如果观测过了就跳过检测\n\n    return new Observer(value);\n}\n\n// 1. 默认vue在初始化的时候，会对对象每一个属性进行劫持，增加dep属性，当取值的时候会做依赖收集\n// 2. 默认还会对属性值是（对象和数组的本身进行增加dep属性）进行依赖收集\n// 3. 如果是属性变化，触发属性对应的dep进行更新\n// 4. 如果是数组更新，触发数组本身的dep进行更新\n// 5. 如果取值的时候是数组还要让数组中的对象类型也进行依赖收集（递归依赖收集）\n// 6. 如果数组里面放对象，默认对象里的属性是会进行依赖收集的，因为在取值时会进行JSON.stringify操作\n","import { observe } from \"./observe\";\nimport { isFunction } from \"./utils\";\n\nexport function initState(vm) {\n  const opts = vm.$options;\n\n  if (opts.data) {\n    initData(vm);\n  }\n}\n\nfunction proxy(vm, key, source) {\n  // 取值的时候做代理，不是暴力的把_data 属性赋予给vm，而且直接赋值会有命名冲突问题\n  Object.defineProperty(vm, key, {\n    get() {\n      return vm[source][key]; // vm._data.message\n    },\n    set(newValue) {\n      vm[source][key] = newValue; // vm._data.message = newValue\n    },\n  });\n}\n\nfunction initData(vm) {\n  let data = vm.$options.data; // 用户传入的数据\n\n  // 如果用户传入的是一个函数，则取函数的返回值作为对象，如果就是对象那就直接使用这个对象\n  // 只有根实例可以data是一个对象\n\n  // data和vm._data引用的是同一个人 -> data被劫持了 vm._data 也被劫持了\n  data = vm._data = isFunction(data) ? data.call(vm) : data; // _data已经是响应式的了\n\n  // 需要将data变成响应式的 Object.defineProperty 重写data中的所有属性\n  observe(data); // 观测对象中的属性\n\n  for (let key in data) {\n    // vm.message => vm._data.message\n    proxy(vm, key, \"_data\"); // 代理vm上的取值和设置值和vm._data没关系了\n  }\n}\n","import {nextTick} from \"../utils\";\n\nlet queue = []; // 这里存放将要更新的watcher\nlet has = {}; // 用来存储已有的watcher的id\n\nfunction flushSchedulerQueue() {\n    // beforeUpdate\n    queue.forEach(watcher => watcher.run())\n    queue = [];\n    has = {};\n    pending = false;\n}\n\nlet pending = false;\n\nexport function queueWatcher(watcher) {\n    // 一般情况下，写去重可以采用这种方式，如果你不使用set的时候\n    let id = watcher.id;\n    if (has[id] == null) {\n        has[id] = true;\n        queue.push(watcher);\n        if (!pending) { // 防抖 多次执行 只走一次\n            nextTick(flushSchedulerQueue);\n            pending = true;\n        }\n    }\n}\n","import Dep from \"./dep\";\nimport {queueWatcher} from \"./scheduler\";\n\nlet id = 0;\n\nclass Watcher {\n    constructor(vm, fn, cb, options) { // $watch() 要把dep放到watcher中\n        this.vm = vm;\n        this.fn = fn;\n        this.cb = cb;\n        this.options = options;\n        this.id = id++;\n        this.depsId = new Set();\n        this.deps = [];\n\n        this.getter = fn; // fn就是页面渲染逻辑\n\n        this.get(); // 表示上来后就做一次初始化\n    }\n\n    addDep(dep) {\n        let id = dep.id;\n        if (!this.depsId.has(id)) {\n            this.depsId.add(id);\n            this.deps.push(dep); // 做了保存id的功能，并且让watcher记住dep\n            dep.addSub(this);\n        }\n    }\n\n    get() {\n        Dep.target = this; // Dep.target = watcher\n        this.getter(); // 页面渲染的逻辑 vm.name / vm.age\n        Dep.target = null; // 渲染完毕后，就将标识清空了，只有在渲染的时候才会进行依赖收集\n    }\n\n    update() { // 每次更新数据都会同步调用这个update方法，我可以将更新的逻辑缓存起来，等会同步更新数据的逻辑之星完毕后，依次调用（去重的逻辑）\n        queueWatcher(this);\n        console.log(\"缓存更新\");\n        // 可以做异步更新处理\n        // this.get(); // vue.nextTick [fn1, fn2, fn3] 相同更新去除\n    }\n\n    run() {\n        console.log(\"真正执行更新\");\n        this.get(); // render() 取最新的vm上的数据\n    }\n}\n\nexport default Watcher;\n","export function createElement(vm, tag, data = {}, ...children) { // 返回虚拟节点 _c('',{}....)\n    return vnode(vm, tag, data, children, data.key, undefined)\n}\n\nexport function createText(vm, text) { // 返回虚拟节点\n    return vnode(vm, undefined, undefined, undefined, undefined, text)\n}\n\n// 看两个节点是不是相同节点，就看是不是tag和key一致\n// vue2就有一个性能问题，递归比对\nexport function isSameVnode(newVnode, oldVnode) {\n    return (newVnode.tag === oldVnode.tag) && (newVnode.key === oldVnode.key);\n}\n\nfunction vnode(vm, tag, data, children, key, text) {\n    return {\n        vm,\n        tag,\n        data,\n        children,\n        key,\n        text,\n    }\n}\n\n// vnode 其实就是一个对象，用来描述节点的，这个和ast长的很像？\n// ast 描述语法，它并没有用户自己的逻辑，只有语法解析出来的内容\n// vnode 它是描述dom结构的，可以自己去扩展属性\n","import {isSameVnode} from \"./index\";\n\nexport function patch(oldVnode, vnode) {\n    // unmount\n\n    const isRealElement = oldVnode.nodeType;\n\n    if (isRealElement) {\n        // 删除老节点，根据vnode创建节点，替换掉新节点\n        const elm = createElm(vnode); // 根据虚拟节点创造了真实节点\n        const parentNode = oldVnode.parentNode;\n        parentNode.insertBefore(elm, oldVnode.nextSibling); // el.nextSibling 不存在就是null，如果为null insertBefore 就是appendChild\n        parentNode.removeChild(oldVnode);\n\n        return elm; // 返回最新节点\n    } else { // 不管怎么diff，最终想更新渲染 -> dom操作里去\n\n        // 只比较同级，如果不一样，儿子就不用比对了，根据当前节点创建儿子，全部替换掉\n        // diff 算法，如何实现？\n        if (!isSameVnode(oldVnode, vnode)) { // 如果新旧节点不是同一个，删除老的换成新的\n            return oldVnode.el.parentNode.replaceChild(createElm(vnode), oldVnode.el);\n        }\n\n        // 文本直接更新即可，因为文本没有儿子\n        let el = vnode.el = oldVnode.el; // 复用节点\n        if (!oldVnode.tag) { // 文本了，一个是文本，那么另一个一定也是文本\n            if (oldVnode.text !== vnode.text) {\n                return el.textContent = vnode.text;\n            }\n        }\n\n        // 元素 新的虚拟节点\n        updateProperties(vnode, oldVnode.data);\n\n        // 是相同节点了，复用节点，再更新不一样的地方（属性）\n\n        // 比较儿子节点\n        let oldChildren = oldVnode.children || [];\n        let newChildren = vnode.children || [];\n        // 情况一：老的有儿子，新的没儿子\n        if (oldChildren.length > 0 && newChildren.length === 0) {\n            el.innerHTML = \"\";\n        } else if (newChildren.length > 0 && oldChildren.length === 0) { // 新的有儿子，老的没有\n            newChildren.forEach(child => el.appendChild(createElm(child)));\n        } else {\n            // 新老都有儿子\n            updateChildren(el, oldChildren, newChildren);\n        }\n\n        return el;\n    }\n}\n\nfunction updateChildren(el, oldChildren, newChildren) {\n    // vue2中如何做的diff算法\n    // vue内部做了优化（能尽量提升性能，如果实在不行，再暴力比对）\n\n    // 1. 在列表中新增和删除的情况\n    let oldStartIndex = 0;\n    let oldStartVnode = oldChildren[0];\n    let oldEndIndex = oldChildren.length - 1;\n    let oldEndVnode = oldChildren[oldEndIndex];\n\n    let newStartIndex = 0;\n    let newStartVnode = newChildren[0];\n    let newEndIndex = newChildren.length - 1;\n    let newEndVnode = newChildren[newEndIndex];\n\n    function makeKeyByIndex(children) {\n        let map = {};\n        children.forEach((item, index) => {\n            map[item.key] = index;\n        });\n        console.log(map);\n        return map;\n    }\n\n    let mapping = makeKeyByIndex(oldChildren);\n\n    // diff算法复杂度，是O(n) 比对的时候，指针交叉的时候，就是比对完成了\n    while (oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\n        if (!oldStartVnode) { // 在指针移动的时候，可能元素已经被移动走了，那么就跳过这一项\n            oldStartVnode = oldChildren[++oldStartIndex];\n        } else if (!oldEndVnode) {\n            oldEndVnode = oldChildren[--oldEndIndex];\n        } else if (isSameVnode(oldStartVnode, newStartVnode)) { // 头头比较\n            patch(oldStartVnode, newStartVnode); // 会递归比较子节点，同时比对这两个人的差异\n            oldStartVnode = oldChildren[++oldStartIndex];\n            newStartVnode = newChildren[++newStartIndex];\n        } else if (isSameVnode(oldEndVnode, newEndVnode)) { // 尾尾比较\n            patch(oldEndVnode, newEndVnode); // 会递归比较子节点，同时比对这两个人的差异\n            oldEndVnode = oldChildren[--oldEndIndex];\n            newEndVnode = newChildren[--newEndIndex];\n        } else if (isSameVnode(oldStartVnode, newEndVnode)) { // 头尾比较\n            patch(oldStartVnode, newEndVnode);\n            el.insertBefore(oldStartVnode.el, oldEndVnode.el.nextSibling);\n            oldStartVnode = oldChildren[++oldStartIndex];\n            newEndVnode = newChildren[--newEndIndex];\n        } else if (isSameVnode(oldEndVnode, newStartVnode)) { //尾头比较\n            patch(oldEndVnode, newStartVnode);\n            el.insertBefore(oldEndVnode.el, oldStartVnode.el); // 将尾部的插入到头部去\n            oldEndVnode = oldChildren[--oldEndIndex];\n            newStartVnode = newChildren[++newStartIndex];\n        } else {\n            // 之前的逻辑都是考虑用户一些特殊情况，但是有非特殊的，乱序排\n            let moveIndex = mapping[newStartVnode.key];\n            if (moveIndex == undefined) {\n                // 没有直接将节点插入到开头的前面\n                el.insertBefore(createElm(newStartVnode), oldStartVnode.el)\n            } else {\n                // 有的话需要复用\n                let moveVnode = oldChildren[moveIndex]; // 找到复用的那个人，将他移动到前面去\n                patch(moveVnode, newStartVnode);\n                el.insertBefore(moveVnode.el, oldStartVnode.el);\n                oldChildren[moveIndex] = undefined; // 将移动的节点标记为空\n            }\n            newStartVnode = newChildren[++newStartIndex];\n        }\n    }\n    if (newStartIndex <= newEndIndex) { // 新的多，那么就将多的插入进去即可\n        // 如果下一个是null就是appendChild\n        let anchor = newChildren[newEndIndex + 1] == null ? null : newChildren[newEndIndex + 1].el; // 参照物是固定的\n        for (let i = newStartIndex; i <= newEndIndex; i++) {\n            // 看一下当前尾结点的下一个元素是否存在，如果存在则是插入到下一个元素的前面\n\n            // 这里可能是向前追加，可能是向后追加\n            el.insertBefore(createElm(newChildren[i]), anchor);\n        }\n    }\n    if (oldStartIndex <= oldEndIndex) { // 老的多余的，需要清理掉，直接删除即可\n        for (let i = oldStartIndex; i <= oldEndIndex; i++) {\n            let child = oldChildren[i];\n            child && el.removeChild(child.el); // 因为child可能是undefined，所以要跳过空节点\n        }\n    }\n}\n\n// 面试： 虚拟节点的实现 -> 如何将虚拟节点渲染成真实节点\nexport function createElm(vnode) {\n    let {tag, data, children, text, vm} = vnode;\n\n    // 我们让虚拟节点和真实节点做一个映射关系，后续某个虚拟节点更新了，我可以跟踪到真实节点，并且更新真实节点\n    if (typeof tag === \"string\") {\n        vnode.el = document.createElement(tag);\n        // 如果有data属性，我们需要把data设置到元素上\n        updateProperties(vnode);\n        children.forEach(child => {\n            vnode.el.appendChild(createElm(child));\n        })\n    } else {\n        vnode.el = document.createTextNode(text);\n    }\n    return vnode.el;\n}\n\nfunction updateProperties(vnode, oldProps = {}) { // 后续写diff算法的时候，再进行完善，没有考虑样式等\n    // 这里的逻辑，可能是初次渲染，初次渲染直接用oldProps，给vnode的el赋值即可\n    // 更新逻辑，拿到老的props和vnode里面的data进行比对\n    let el = vnode.el; // dom真实的节点\n    let newProps = vnode.data || {};\n    // 新旧比对，两个对象如何比对差异？\n\n    let newStyle = newProps.style || [];\n    let oldStyle = oldProps.style || [];\n\n    for (let key in oldProps) {\n        if (!newStyle[key]) { // 老的样式有，新的没有，就把页面上的样式删除掉\n            el.style[key] = \"\";\n        }\n    }\n\n    for (let key in newProps) { // 直接用新的盖掉老的就可以了\n        // 如果前后一样，浏览器会去检测\n        if (key === \"style\") {\n            for (let key in newStyle) {\n                el.style[key] = newStyle[key];\n            }\n        } else {\n            el.setAttribute(key, newProps[key]);\n        }\n    }\n    for (let key in oldProps) {\n        if (!newProps[key]) {\n            el.removeAttribute(key);\n        }\n    }\n}\n","import Watcher from \"./observe/watcher\";\nimport {patch} from \"./vdom/patch\";\n\nexport function mountComponent(vm) {\n\n    // 初始化流程\n    let updateComponent = () => {\n        vm._update(vm._render());  // render()  _c _v _s\n    }\n\n    // 每个组件都有一个watcher，我们把这个watcher称之为渲染watcher\n    callHook(vm, \"beforeCreate\");\n    new Watcher(vm, updateComponent, () => {\n        console.log('后续增添更新钩子函数 update')\n        callHook(vm, \"created\");\n    }, true);\n    callHook(vm, \"mounted\");\n\n    // updateComponent()\n}\n\nexport function lifeCycleMixin(Vue) {\n    Vue.prototype._update = function (vnode) {\n        // 采用的是 先序深度遍历 创建节点 （遇到节点就创造节点，递归创建）\n        const vm = this;\n        let prevVnode = vm._prevVnode;\n        // 第一次渲染是根据虚拟节点生成真实节点，替换掉原来的节点\n        vm._prevVnode = vnode;\n        // 如果是第二次，生成一个新的虚拟节点，和老的虚拟节点进行对比\n\n        if (!prevVnode) { // 没有节点就是初次渲染\n            vm.$el = patch(vm.$el, vnode)\n        } else {\n            vm.$el = patch(prevVnode, vnode)\n        }\n    }\n}\n\nexport function callHook(vm, hook) {\n    let handlers = vm.$options[hook];\n    handlers && handlers.forEach(fn => {\n        fn.call(vm); // 生命周期的this永远指向实例\n    })\n}\n","import {compileToFunction} from \"./compiler\";\nimport {initState} from \"./state\";\nimport {mountComponent} from \"./lifecycle\";\nimport {mergeOptions, nextTick} from \"./utils\";\n\nexport function initMixin(Vue) {\n    // 后续组件化开发的时候，Vue.extend可以创造一个子组件，子组件可以继承Vue，子组件也可以调用init方法\n    Vue.prototype._init = function (options) {\n        const vm = this;\n\n        // 把用户的选项放到vm上，这样在其他方法中都可以获取到options了\n        vm.$options = mergeOptions(vm.constructor.options, options); // 为了后续扩展的方法都可以获取$options选项\n\n        // options中是用户传入的数据 el data\n\n        initState(vm);\n\n        if (vm.$options.el) {\n            // 要将数据挂载到页面上\n\n            // 现在数据已经被劫持了，数据变化需要更新视图，diff算法更新需要更新的部分\n            // vue -> template（写起来更符合直觉） -> jsx（灵活）\n            // vue3 template 写起来性能更高一些，内部做了很多优化\n\n            // template -> ast语法树（用来描述语法的，描述语法本身）-> 描述成一个树结构 -> 将代码重组成js语法\n\n            // 模板编译原理（把template模板编译成render函数） -> 虚拟DOM -> diff算法比对虚拟DOM\n\n            // ast -> render 返回 -> vnode -> 生成真实dom\n            // 更新的时候再次调用render -> 新的vnode -> 新旧比对 -> 更新真实dom\n\n            vm.$mount(vm.$options.el);\n        }\n    };\n\n    Vue.prototype.$mount = function (el) {\n        const vm = this;\n        const opts = vm.$options;\n        el = document.querySelector(el); // 获取真实的元素\n        vm.$el = el; // 页面真实元素\n\n        if (!opts.render) {\n            // 模板编译\n            let template = opts.template;\n            if (!template) {\n                template = el.outerHTML;\n            }\n            let render = compileToFunction(template);\n            opts.render = render;\n        }\n        // 这里已经获取到了一个render函数，这个函数他的返回值 _c('div', {id: 'app'}, _c('span', undefined, 'hello'))\n\n        mountComponent(vm);\n    };\n\n    Vue.prototype.$nextTick = nextTick;\n}\n","import {isObject} from \"./utils\";\nimport {createElement, createText} from \"./vdom\";\n\nexport function renderMixin(Vue) {\n    Vue.prototype._c = function () { // createElement 创建元素型的节点\n        const vm = this;\n        return createElement(vm, ...arguments);\n    }\n    Vue.prototype._v = function (text) { // 创建文本的虚拟节点\n        const vm = this;\n        return createText(vm, text); // 描述虚拟节点是属于哪个实例的\n    }\n    Vue.prototype._s = function (val) { // JSON.stingfiy()\n        if (isObject(val)) {\n            return JSON.stringify(val);\n        }\n        return val;\n    }\n    Vue.prototype._render = function () {\n        const vm = this; // vm中有所有的数据 vm.xxx => vm._data.xxx\n        let {render} = vm.$options;\n        let vnode = render.call(vm);\n        return vnode;\n    }\n}\n","import {mergeOptions} from \"../utils\";\n\nexport function initGlocalAPI(Vue) {\n    Vue.options = {}; // 全局属性，在每个组件初始化的时候，将这些属性放到每个组件上\n    Vue.mixin = function (options) {\n        this.options = mergeOptions(this.options, options);\n        return this;\n    }\n    Vue.component = function (params) {\n\n    }\n    Vue.filter = function (params) {\n\n    }\n    Vue.directive = function (params) {\n\n    }\n}\n","import {initMixin} from \"./init\";\nimport {renderMixin} from \"./render\";\nimport {lifeCycleMixin} from \"./lifecycle\";\nimport {initGlocalAPI} from \"./global-api\";\nimport {compileToFunction} from \"./compiler\";\nimport {createElm, patch} from \"./vdom/patch\";\n\n// vue要如何实现，原型模式，所有的功能都通过原型扩展的方式来添加\nfunction Vue(options) {\n    this._init(options); // 实现vue的初始化功能\n}\n\ninitMixin(Vue);\nrenderMixin(Vue);\nlifeCycleMixin(Vue);\ninitGlocalAPI(Vue);\n\n// // 先生成一个虚拟节点\n// let vm1 = new Vue({\n//     data() {\n//         return {name: 'ricardo'}\n//     }\n// })\n// let render1 = compileToFunction(`\n//     <div>\n//         <ul>\n//             <li key=\"A\">A</li>\n//             <li key=\"B\">B</li>\n//             <li key=\"C\">C</li>\n//             <li key=\"D\">D</li>\n//         </ul>\n//     </div>`);\n// let oldVnode = render1.call(vm1); // 第一次的虚拟节点\n// let el1 = createElm(oldVnode);\n// document.body.appendChild(el1);\n//\n// let vm2 = new Vue({\n//     data() {\n//         return {name: '赵日天'}\n//     }\n// })\n// let render2 = compileToFunction(`\n//     <div>\n//         <ul>\n//             <li key=\"F\">F</li>\n//             <li key=\"B\">B</li>\n//             <li key=\"A\">A</li>\n//             <li key=\"E\">E</li>\n//             <li key=\"P\">P</li>\n//         </ul>\n//     </div>`);\n// let newVnode = render2.call(vm2);\n// // let el2 = createElm(newVnode);\n// // document.body.appendChild(el2);\n// setTimeout(() => {\n//     patch(oldVnode, newVnode); // 对比两个虚拟节点的差异，更新需要更新的地方\n// }, 2000);\n\n// 再去生成一个新的虚拟节点 patch\n// 导出Vue给别人使用\nexport default Vue;\n\n// 1. new Vue 会调用_init方法进行初始化操作\n// 2. 会将用户的选项放到 vm.$options 上\n// 3. 会对当前属性上搜索有没有data数据 initState\n// 4. 有data判断data 是不是一个函数，如果是函数取返回值initData\n// 5. observe去观测data中的数据和vm没关系，说明data已经变成响应式\n// 6. vm上想取值也能取到data中的数据 vm._data = data 这样用户能取到data了 vm._data\n// 7. 用户觉得有点麻烦 vm.xxx -> vm._data\n// 8. 如果更新对象不存在的属性，会导致视图不更新，如果是数组，更新索引和长度不会触发更新\n// 9. 如果是替换成一个对象，新对象会被进行劫持，如果是数组存放新内容 push unshift 新增的内容也会被劫持\n// 10. 通过 __ob__ 进行标识这个对象被监控过（在vue中被监控的对象身上都有一个__ob__这个属性）\n// 11. 如果你就想改索引，可以使用$set方法，内部就是splice()\n\n// 如果el需要挂载到页面上\n\n\n// 只有根组件的情况：每个属性都有一个dep\n// 1. vue里面用到了观察者模式，默认组件渲染的时候，会创建一个watcher，（并且会渲染视图）\n// 2. 当渲染视图的时候，会取data中的数据，会走每个属性的get方法，就让这个属性的dep记录watcher\n// 3. 同时让watcher也记住dep（这个逻辑目前没用到）dep和watcher是多对多的关系，因为一个属性可能对应多个视图，一个视图对应多个数据\n// 4. 如果数据发生变化，会通知对应属性的dep，依次通知存放的watcher去更新\n"],"names":["defaultTagRE","genProps","attrs","str","i","length","attr","name","styles","value","replace","arguments","JSON","stringify","slice","gen","el","type","generate","text","test","lastIndex","tokens","match","exec","index","push","trim","join","genChildren","children","map","item","ast","code","tag","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parserHTML","html","stack","root","createASTElement","parent","start","element","end","tagName","pop","console","log","chars","advance","len","substring","parseStartTag","indexOf","startTagMatch","endTagMatch","compileToFunction","template","render","Function","isFunction","val","isObject","callbacks","waiting","flushCallbacks","forEach","fn","nextTick","Promise","resolve","then","isArray","Array","strats","lifeCycle","hook","parentVal","childVal","concat","mergeOptions","options","key","mergeFiled","hasOwnProperty","strat","oldArrayPrototype","prototype","arrayMethods","Object","create","methods","method","args","call","inserted","ob","__ob__","observeArray","dep","notify","id","Dep","constructor","props","subs","depend","target","addDep","addSub","watcher","update","Observer","defineProperty","enumerable","__proto__","walk","data","observe","keys","defineReactive","dependArray","current","obj","childOb","get","set","newValue","initState","vm","opts","$options","initData","proxy","source","_data","queue","has","flushSchedulerQueue","run","pending","queueWatcher","Watcher","cb","depsId","Set","deps","getter","add","createElement","vnode","undefined","createText","isSameVnode","newVnode","oldVnode","patch","isRealElement","nodeType","elm","createElm","parentNode","insertBefore","nextSibling","removeChild","replaceChild","textContent","updateProperties","oldChildren","newChildren","innerHTML","child","appendChild","updateChildren","oldStartIndex","oldStartVnode","oldEndIndex","oldEndVnode","newStartIndex","newStartVnode","newEndIndex","newEndVnode","makeKeyByIndex","mapping","moveIndex","moveVnode","anchor","document","createTextNode","oldProps","newProps","newStyle","style","setAttribute","removeAttribute","mountComponent","updateComponent","_update","_render","callHook","lifeCycleMixin","Vue","prevVnode","_prevVnode","$el","handlers","initMixin","_init","$mount","querySelector","outerHTML","$nextTick","renderMixin","_c","_v","_s","initGlocalAPI","mixin","component","params","filter","directive"],"mappings":"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"}